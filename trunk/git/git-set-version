#!/bin/sh

set -e

if [ ! -d .git ] && [ ! -f .git ]; then
    echo "Current directory is not root of a Git repository" >&2
    exit 1
fi

dir=.
inc=0
sign=0
tagonly=0
undo=0

while getopts d:istu opt; do
    case $opt in
        d)
            dir=$OPTARG;;
        i)
            inc=1;;
        s)
            sign=1;;
        t)
            tagonly=1;;
        u)
            undo=1;;
        *)
            exit 1;;
    esac
done
shift $(($OPTIND - 1))

vfile=$dir/.version

if [ $undo -eq 1 ]; then
    if [ $tagonly -eq 0 ]; then
        git reset HEAD^ "$vfile"
        git commit --amend --no-edit
        git checkout "$vfile"
    fi
    version=$(cat "$vfile")
    git tag -d "v$version"
    exit
fi

if [ $inc -eq 1 ]; then
    version=$(cat "$vfile") || exit 1
    maj=$(echo "$version" | cut -d . -f 1)
    min=$(echo "$version" | cut -d . -f 2)
    version=$maj.$((min+1))
else
    version=$1
fi
if [ -z "$version" ]; then
    echo "Nonempty version string required" >&2
    exit 1
fi

args="\"-m\" \"Version $version\""
test $sign -eq 1 && args="$args -s"
eval "set -- $args"

if [ $tagonly -eq 0 ]; then
    echo "$version" >"$vfile"
    git add "$vfile"
    git commit --amend --no-edit
fi
git tag "$@" "v$version"
echo "Version $version" >&2
