#!/usr/bin/env bash

get_branches()
{
    local tmp

    tmp=$(git branch)
    if [[ $? != 0 ]]; then
        return 1
    fi

    while IFS= read -r line; do
        b="${line##??}"
        branches+="$b "
    done < <(echo "$tmp")
}

confirm_cmd()
{
    read -p "Run command? (y/n/q) "
    case $REPLY in
        y)
            return 1
            ;;
        *q* | *Q*)
            return 2
            ;;
    esac

    return 0
}

do_sync_branch()
{
    if [[ $1 = "$cur_branch" ]]; then
        cmd="git reset --hard $2"
    else
        cmd="git branch -f --no-track $1 $2"
    fi

    eval echo "\"Running \\\"$cmd\\\"\"" 1>&2

    if [[ $force != 1 ]]; then
        confirm_cmd
        res=$?
        if [[ $res != 1 ]]; then
            echo "Branch $b not reset" 1>&2
            if [[ $res = 2 ]]; then
                return 1
            fi
            return 0
        fi
    fi

    eval "$cmd" || ret=1
}

do_sync()
{
    cur_branch=$(git rev-parse --abbrev-ref HEAD)

    ret=0
    for b in $branches; do
        if [[ $b = "master" ]] || [[ ${branch_excl_set[$b]} = 1 ]]; then
            continue
        fi
        do_sync_branch "$b" "$1"
        if [[ $? = 1 ]]; then
            break
        fi
    done

    exit $ret
}

sync_with_origin()
{
    do_sync "$origin/\$b"
}

sync_with_bundles()
{
    do_sync "bundle_\$b/\$b"
}

if ! declare -A branch_excl_set 2>/dev/null; then
    echo "bash version 4.0 or greater is required" 1>&2
    exit 1
fi

set -e

get_branches

set +e

cmd=$(echo "$0" | cut -d '-' -f 2-)
if [[ $cmd = "sync" ]]; then
    sync=1
    while [[ $1 ]]; do
        case $1 in
            --bundles)
                sync=2
                ;;
            -f)
                force=1
                ;;
        esac
        shift
    done
fi

if [[ $sync = 1 ]]; then
    origin=$(git config user.upstreamRemoteName)
    [[ $origin = "" ]] && origin="origin"

    sync_with_origin
    exit $?
fi

branches_excl=$(git config user.branchesExcl)
for b in $branches_excl; do
    branch_excl_set[$b]=1
done
branch_excl_set["master"]=1

if [[ $sync = 2 ]]; then
    sync_with_bundles
    exit $?
fi

for b in $branches; do
    if [[ ${branch_excl_set[$b]} != 1 ]]; then
        echo "$b"
    fi
done
