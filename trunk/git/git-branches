#!/usr/bin/env bash

get_branches()
{
    local tmp

    tmp=$(git branch)
    if [[ $? != 0 ]]; then
        return 1
    fi

    while IFS= read -r line; do
        b="${line##??}"
        branches+="$b "
        branch_set[$b]=1
    done < <(echo "$tmp")
}

set -e

declare -A branch_set
get_branches

set +e

cmd=$(echo $0 | cut -d '-' -f 2)
if [[ $cmd = "sync" ]]; then
    ret=0
    for b in $branches; do
        if [[ $b != "master" ]]; then
            cmd="git checkout $b && git reset --hard origin/$b"
            echo "Running \"$cmd\""
            read -p "Continue? (y/n) " resp
            if [[ $resp = "y" ]]; then
                eval $cmd || ret=1
            fi
        fi
    done

    git checkout master

    exit $ret
fi

branches_excl=$(git config user.branchesExcl)
for b in $branches_excl; do
    branch_set[$b]=
done
branch_set["master"]=

first=1
for b in $branches; do
    if [[ ${branch_set[$b]} = 1 ]]; then
        if [[ $first = 1 ]]; then
            first=0
        else
            echo -n " "
        fi
        echo -n "$b"
    fi
done
