#!/bin/sh

do_exit()
{
    test "$sign" -ne 1 || test "$agent" -ne 1 || killall gpg-agent
    exit "$1"
}

set -e

if [ ! -d .git ] && [ ! -f .git ]; then
    echo "Current directory is not root of a Git repository" >&2
    exit 1
fi

agent=0
automake=0
distdir=dist
inc=0
sign=0
trunkdir=trunk
undo=0

while getopts ad:imst:u opt; do
    case $opt in
        a)
            agent=1;;
        d)
            distdir=$OPTARG;;
        i)
            inc=1;;
        m)
            automake=1;;
        s)
            sign=1;;
        t)
            trunkdir=$OPTARG;;
        u)
            undo=1;;
        *)
            exit 1;;
    esac
done

if [ $OPTIND -le $# ]; then
    echo "Unrecognized arguments" >&2
    exit 1
fi

vfile=$trunkdir/.version

test $sign -eq 1 && commitarchopts="-s"

if [ $undo -eq 1 ]; then
    git set-version -d "$trunkdir" -tu
    git commit-archive -a -d "$distdir" -u $commitarchopts
    git reset HEAD^ "$vfile"
    git commit --amend --no-edit
    git checkout "$vfile"
    exit
fi

test $automake -eq 1 && commitarchopts="$commitarchopts -m"

if [ $sign -eq 1 ]; then
    setversopts="-s"
    test $agent -eq 1 && gpg-agent --daemon --use-standard-socket
fi

version=$(cat "$vfile")
ret=$?
if [ $inc -eq 1 ]; then
    test $ret -eq 0 || exit 1
    maj=$(echo "$version" | cut -d . -f 1)
    min=$(echo "$version" | cut -d . -f 2)
    version=$maj.$((min+1))
fi

(
    set -e
    echo "$version" >"$vfile"
    git add "$vfile"
    git commit --amend --no-edit
    git commit-archive -a -d "$distdir" $commitarchopts "$trunkdir"
    git set-version -d "$trunkdir" -t $setversopts "$version"
) || do_exit 1

do_exit 0
