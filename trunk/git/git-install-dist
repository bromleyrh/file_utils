#!/usr/bin/env bash

get_cmds()
{
    cmdpre=$(git config user.installDistCmdPre)
    cmdpost=$(git config user.installDistCmdPost)
}

set_up_env()
{
    local old_ifs

    env=$(git config user.installDistEnv)
    [[ $? != 0 ]] && return

    old_ifs=$IFS
    IFS=";"
    for e in $env; do
        e=$(echo $e | sed -e 's/^[[:space:]][[:space:]]*//')
        eval export $e
    done
    IFS=$old_ifs
}

get_ncpus()
{
    local platform=$(uname)

    case $platform in
        "Darwin" | "FreeBSD")
            ncpus=$(sysctl hw.ncpu | cut -d ' ' -f 2);;
        "Linux")
            ncpus=$(nproc);;
        *)
            ncpus=1;;
    esac
    if [[ $? != 0 ]]; then
        return 1
    fi
}

get_dirs()
{
    local rootdir=$(git rev-parse --show-toplevel)
    [[ $? != 0 ]] && return 1

    distdir=$rootdir/dist
    tmpdir=/tmp/tmp
}

do_build()
{
    ./configure "$@" # TODO: add option to set configure parameters

    make -j$ncpus check # TODO: make building tests optional
    if [[ $noroot = 0 ]]; then
        echo "Root privilege required to install"
        sudo make install
    else
        make install
    fi

    make distclean
}

get_cmds
set_up_env
opts=$(git config user.installDistOpts)
[[ $? == 0 ]] && set -- $opts $@

noroot=0
if [[ $1 = "-r" ]]; then
    noroot=1
    shift
fi

get_ncpus
get_dirs

set -e

mkdir -v $tmpdir
tar -x -f $distdir/*.xz -C $tmpdir -v

cd $tmpdir/*
if [[ -n $cmdpre ]]; then
    echo "Running \"$cmdpre\""
    eval $cmdpre
fi
do_build "$@"
if [[ -n $cmdpost ]]; then
    echo "Running \"$cmdpost\""
    eval $cmdpost
fi
cd - 1>/dev/null

rm -frv $tmpdir
